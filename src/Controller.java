import java.util.ArrayList;

public class Controller {

    private ArrayList<Consumer> consumers;
    private Source source;
    private Battery battery;
    private double sourceEff;

    public Controller(ArrayList<Consumer> consumers, Source source, Battery battery){
        this.consumers = consumers;
        this.battery = battery;
        this.source = source;
    }

    //everything that needs to be done in one simulation cycle
    public void cycle(double sourceEff){
        this.sourceEff = sourceEff;
        chargeBattery();
        consume();
    }


    // charges the battery with the source and checks if there is too much charge
    private void chargeBattery(){
        int chargeGen = source.getCharge(sourceEff);
        System.out.println("Charge generated by Source: " + chargeGen);
        System.out.println("Current battery status: " + battery.getCharge());
        int toNetwork = battery.increaseCharge(chargeGen);
        System.out.println("Charge to network: " + toNetwork);
    }

    //every consumer consumes from the battery and outputs if battery is empty
    private void consume(){
        int fromNetwork = 0;
        for (Consumer consumer:consumers) {
            fromNetwork += battery.reduceCharge(consumer.getReqCharge());
        }
        System.out.println("Charge from network: " + fromNetwork);
    }

    public double getSourceEff() {
        return sourceEff;
    }

    public Source getSource() {
        return source;
    }

    public Battery getBattery() {
        return battery;
    }
}
